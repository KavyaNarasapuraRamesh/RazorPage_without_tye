name: Build and Deploy

on: [push]

env:
  PROJECT_NAME: Azure Automation
  NAMESPACE: default
  APP_NAME: microservices
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: tye deploy
    runs-on: ubuntu-latest
    steps:
    - name: ‚úî Checkout
      uses: actions/checkout@v2
    - name: azure/login@v1     # Azure login required to add a temporary firewall rule
      run: |
       az login -u ${{ secrets.username }} -p ${{ secrets.password }}
       
    - name: login
      run: |
       az acr login -n ${{ secrets.AZURE_CONTAINER_REGISTRY }}
       az aks get-credentials --resource-group ${{  secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}
       
  
    - name: üß∞ Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
       dotnet-version: 3.1.300

    - name: üõ† Install Tye tools
      run: |
        dotnet tool install -g Microsoft.Tye --version "0.4.0-alpha.20371.1"
        
    - name: üîê Login to ACR
      uses: Azure/docker-login@v1  
      with:  
        login-server: ${{ secrets.ACR_RESOURCE_URI }}
        username: ${{ secrets.ACR_USER }}  
        password: ${{ secrets.ACR_PASSWORD }}

    - name: üìÉ Set AKS context
      uses: azure/K8S-set-context@v1
      with:
       method: kubeconfig
       kubeconfig: ${{ secrets.KUBE_CONFIG }}
     
    - name: build and push
      uses: docker/build-push-action@v2.10.0
      with: 
       context: .
       tags: azuretoolsacr.azurecr.io/razorapp:1.0.0
       push: ${{ github.ref == 'refs/heads/master' }}  
     
    - name: üåê kubectl apply
      run: |
       kubectl apply -f manifests/deploy.yaml
       kubectl apply -f manifests/service.yaml
       
    
    - name: Cmdline@2
      run: | 
           kubectl  rollout restart deployment/razorpage
    
